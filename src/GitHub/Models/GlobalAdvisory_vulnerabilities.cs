// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace GitHub.Models {
    public class GlobalAdvisory_vulnerabilities : IAdditionalDataHolder, IParsable {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The package version that resolve the vulnerability.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FirstPatchedVersion { get; set; }
#nullable restore
#else
        public string FirstPatchedVersion { get; set; }
#endif
        /// <summary>The name of the package affected by the vulnerability.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public GlobalAdvisory_vulnerabilities_package? Package { get; set; }
#nullable restore
#else
        public GlobalAdvisory_vulnerabilities_package Package { get; set; }
#endif
        /// <summary>The functions in the package that are affected by the vulnerability.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? VulnerableFunctions { get; private set; }
#nullable restore
#else
        public List<string> VulnerableFunctions { get; private set; }
#endif
        /// <summary>The range of the package versions affected by the vulnerability.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? VulnerableVersionRange { get; set; }
#nullable restore
#else
        public string VulnerableVersionRange { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="GlobalAdvisory_vulnerabilities"/> and sets the default values.
        /// </summary>
        public GlobalAdvisory_vulnerabilities() {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="GlobalAdvisory_vulnerabilities"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static GlobalAdvisory_vulnerabilities CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new GlobalAdvisory_vulnerabilities();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"first_patched_version", n => { FirstPatchedVersion = n.GetStringValue(); } },
                {"package", n => { Package = n.GetObjectValue<GlobalAdvisory_vulnerabilities_package>(GlobalAdvisory_vulnerabilities_package.CreateFromDiscriminatorValue); } },
                {"vulnerable_functions", n => { VulnerableFunctions = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                {"vulnerable_version_range", n => { VulnerableVersionRange = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("first_patched_version", FirstPatchedVersion);
            writer.WriteObjectValue<GlobalAdvisory_vulnerabilities_package>("package", Package);
            writer.WriteStringValue("vulnerable_version_range", VulnerableVersionRange);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
