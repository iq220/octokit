// <auto-generated/>
using GitHub.Repositories.Item.Environments.Item.Secrets;
using GitHub.Repositories.Item.Environments.Item.Variables;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System;
namespace GitHub.Repositories.Item.Environments.Item {
    /// <summary>
    /// Builds and executes requests for operations under \repositories\{repository_id}\environments\{environment_name}
    /// </summary>
    public class WithEnvironment_nameItemRequestBuilder : BaseRequestBuilder {
        /// <summary>The secrets property</summary>
        public SecretsRequestBuilder Secrets { get =>
            new SecretsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The variables property</summary>
        public VariablesRequestBuilder Variables { get =>
            new VariablesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="WithEnvironment_nameItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithEnvironment_nameItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/repositories/{repository_id}/environments/{environment_name}", pathParameters) {
        }
        /// <summary>
        /// Instantiates a new <see cref="WithEnvironment_nameItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithEnvironment_nameItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/repositories/{repository_id}/environments/{environment_name}", rawUrl) {
        }
    }
}
