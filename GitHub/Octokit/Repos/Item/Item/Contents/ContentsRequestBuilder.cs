// <auto-generated/>
using Microsoft.Kiota.Abstractions;
using Octokit.Client.Repos.Item.Item.Contents.Item;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System;
namespace Octokit.Client.Repos.Item.Item.Contents {
    /// <summary>
    /// Builds and executes requests for operations under \repos\{repos-id}\{Owner-id}\contents
    /// </summary>
    public class ContentsRequestBuilder : BaseRequestBuilder {
        /// <summary>Gets an item from the Octokit.Client.repos.item.item.contents.item collection</summary>
        /// <param name="position">path parameter</param>
        public WithPathItemRequestBuilder this[string position] { get {
            var urlTplParams = new Dictionary<string, object>(PathParameters);
            urlTplParams.Add("path", position);
            return new WithPathItemRequestBuilder(urlTplParams, RequestAdapter);
        } }
        /// <summary>
        /// Instantiates a new ContentsRequestBuilder and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ContentsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/repos/{repos%2Did}/{Owner%2Did}/contents", pathParameters) {
        }
        /// <summary>
        /// Instantiates a new ContentsRequestBuilder and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ContentsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/repos/{repos%2Did}/{Owner%2Did}/contents", rawUrl) {
        }
    }
}
