// <auto-generated/>
using Microsoft.Kiota.Abstractions;
using Octokit.Client.Repos.Item.Item.Git.Ref.Item;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System;
namespace Octokit.Client.Repos.Item.Item.Git.Ref {
    /// <summary>
    /// Builds and executes requests for operations under \repos\{repos-id}\{Owner-id}\git\ref
    /// </summary>
    public class RefRequestBuilder : BaseRequestBuilder {
        /// <summary>Gets an item from the Octokit.Client.repos.item.item.git.ref.item collection</summary>
        /// <param name="position">Unique identifier of the item</param>
        public WithRefItemRequestBuilder this[string position] { get {
            var urlTplParams = new Dictionary<string, object>(PathParameters);
            urlTplParams.Add("ref", position);
            return new WithRefItemRequestBuilder(urlTplParams, RequestAdapter);
        } }
        /// <summary>
        /// Instantiates a new RefRequestBuilder and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public RefRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/repos/{repos%2Did}/{Owner%2Did}/git/ref", pathParameters) {
        }
        /// <summary>
        /// Instantiates a new RefRequestBuilder and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public RefRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/repos/{repos%2Did}/{Owner%2Did}/git/ref", rawUrl) {
        }
    }
}
